"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1304],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=c(n),d=a,k=p["".concat(s,".").concat(d)]||p[d]||h[d]||i;return n?r.createElement(k,l(l({ref:t},u),{},{components:n})):r.createElement(k,l({ref:t},u))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[p]="string"==typeof e?e:a,l[1]=o;for(var c=2;c<i;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1875:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const i={id:"verify-a-release-candidate",title:"Verify a release candidate"},l=void 0,o={unversionedId:"verify-a-release-candidate",id:"verify-a-release-candidate",title:"Verify a release candidate",description:"To verify the release, the following checklist can be used to reference:",source:"@site/community/verify-a-release-candidate.md",sourceDirName:".",slug:"/verify-a-release-candidate",permalink:"/community/verify-a-release-candidate",draft:!1,editUrl:"https://github.com/apache/kvrocks-website/tree/main/community/verify-a-release-candidate.md",tags:[],version:"current",frontMatter:{id:"verify-a-release-candidate",title:"Verify a release candidate"},sidebar:"community",previous:{title:"Create a kvrocks controller release",permalink:"/community/create-a-kvrocks-controller-release"},next:{title:"Committers",permalink:"/community/category/committers"}},s={},c=[{value:"Download the release package to be verified to the local environment",id:"download-the-release-package-to-be-verified-to-the-local-environment",level:2},{value:"Kvrocks",id:"kvrocks",level:3},{value:"Kvrocks Controller",id:"kvrocks-controller",level:3},{value:"Verify signature and hash",id:"verify-signature-and-hash",level:2},{value:"Check if the release package is complete",id:"check-if-the-release-package-is-complete",level:3},{value:"Verify signature and hash",id:"verify-signature-and-hash-1",level:3},{value:"Kvrocks",id:"kvrocks-1",level:3},{value:"Check the file content of the source package",id:"check-the-file-content-of-the-source-package",level:3}],u={toc:c},p="wrapper";function h(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"To verify the release, the following checklist can be used to reference:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Download links are valid."),(0,a.kt)("li",{parentName:"ul"},"Checksums and PGP signatures are valid."),(0,a.kt)("li",{parentName:"ul"},"Source code artifacts have correct names matching the current release."),(0,a.kt)("li",{parentName:"ul"},"LICENSE and NOTICE files are correct for the repository."),(0,a.kt)("li",{parentName:"ul"},"All files have license headers if necessary."),(0,a.kt)("li",{parentName:"ul"},"Building is OK.")),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"It is ",(0,a.kt)("strong",{parentName:"p"},"NOT")," necessary to run all checks to cast a vote for a release candidate."),(0,a.kt)("p",{parentName:"admonition"},"However, you should clearly state which checks you did. The release manager needs to ensure that each check was done.")),(0,a.kt)("h2",{id:"download-the-release-package-to-be-verified-to-the-local-environment"},"Download the release package to be verified to the local environment"),(0,a.kt)("p",null,'Use the following command to download all artifacts, replace "${release_version}-${rc_version}" with the version ID of the version to be released:'),(0,a.kt)("h3",{id:"kvrocks"},"Kvrocks"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"svn co https://dist.apache.org/repos/dist/dev/kvrocks/${release_version}-${rc_version}/\n")),(0,a.kt)("h3",{id:"kvrocks-controller"},"Kvrocks Controller"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"svn co https://dist.apache.org/repos/dist/dev/kvrocks/kvrocks-controller/${release_version}-${rc_version}/\n")),(0,a.kt)("h2",{id:"verify-signature-and-hash"},"Verify signature and hash"),(0,a.kt)("p",null,"Start the verification process, which includes but is not limited to the following content and verification methods."),(0,a.kt)("h3",{id:"check-if-the-release-package-is-complete"},"Check if the release package is complete"),(0,a.kt)("p",null,"The package to release must check:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Whether to include the source code package"),(0,a.kt)("li",{parentName:"ul"},"Whether to include the signature of the source code package"),(0,a.kt)("li",{parentName:"ul"},"Whether to include the sha512 of the source code package"),(0,a.kt)("li",{parentName:"ul"},"Check the binary package (if include), also check the contents listed above")),(0,a.kt)("h3",{id:"verify-signature-and-hash-1"},"Verify signature and hash"),(0,a.kt)("p",null,"GnuPG is recommended, which can install by ",(0,a.kt)("inlineCode",{parentName:"p"},"yum install gnupg"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"apt-get install gnupg")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"brew install gnupg"),"."),(0,a.kt)("p",null,"First, import public key:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"curl https://downloads.apache.org/kvrocks/KEYS > KEYS # Download KEYS\ngpg --import KEYS # Import KEYS to local\n")),(0,a.kt)("p",null,"Then, trust the public key by entering ",(0,a.kt)("inlineCode",{parentName:"p"},"gpg --edit-key <KEY-used-in-this-version>")," and finishing interactively:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"gpg (GnuPG) 2.3.6; Copyright (C) 2021 Free Software Foundation, Inc.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\nSecret key is available.\n\nsec  rsa4096/A3008E49B00F626B\n     created: 2022-07-12  expires: never       usage: SC\n     trust: ultimate      validity: ultimate\nssb  rsa4096/DD4049061341F808\n     created: 2022-07-12  expires: never       usage: E\n[ultimate] (1). hulk <hulk@apache.org>\n\ngpg> trust\nsec  rsa4096/A3008E49B00F626B\n     created: 2022-07-12  expires: never       usage: SC\n     trust: ultimate      validity: ultimate\nssb  rsa4096/DD4049061341F808\n     created: 2022-07-12  expires: never       usage: E\n[ultimate] (1). hulk <hulk@apache.org>\n\nPlease decide how far you trust this user to correctly verify other users' keys\n(by looking at passports, checking fingerprints from different sources, etc.)\n\n  1 = I don't know or won't say\n  2 = I do NOT trust\n  3 = I trust marginally\n  4 = I trust fully\n  5 = I trust ultimately\n  m = back to the main menu\n\nYour decision? 5\nDo you really want to set this key to ultimate trust? (y/N) y\n\nsec  rsa4096/A3008E49B00F626B\n     created: 2022-07-12  expires: never       usage: SC\n     trust: ultimate      validity: ultimate\nssb  rsa4096/DD4049061341F808\n     created: 2022-07-12  expires: never       usage: E\n[ultimate] (1). hulk <hulk@apache.org>\n")),(0,a.kt)("p",null,"Now, check signature and hash:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Save below shell codes to file ",(0,a.kt)("inlineCode",{parentName:"li"},"release-verify.sh"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'#!/usr/bin/env bash\n\nYELLOW="\\033[37;1m"\nGREEN="\\033[32;1m"\nENDCOLOR="\\033[0m"\n\nif [ "$#" -ne 1 ]; then\n  echo "Usage: $0 {YOUR RELEASE TAR FILE}" >&2\n  exit 1\nfi\n\nPKG=$1\n\nif [ ! -f "$PKG" ]; then\n    echo "File \'$PKG\' does not exist."\n    exit 1\nfi\n\n#gpg --armor --output "$PKG.asc" --detach-sig $PKG\ngpg --verify "$PKG.asc" $PKG\n\nif [ $? -eq 0 ]\nthen\n    printf $GREEN"Success to verify the gpg sign"$ENDCOLOR"\\n"\nelse\n    printf $YELLOW"Failed to verify the gpg sign"$ENDCOLOR"\\n"\nfi\n\n#shasum -a 512 $PKG > "$PKG.sha512"\nshasum -a 512 -c "$PKG.sha512"\n\nif [ $? -eq 0 ]\nthen\n    printf $GREEN"Success to verify the checksum"$ENDCOLOR"\\n"\nelse\n    printf $YELLOW"Failed to verify the checksum"$ENDCOLOR"\\n"\nfi\n')),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"verify the sign and checksum")),(0,a.kt)("h3",{id:"kvrocks-1"},"Kvrocks"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"./release-verify.sh apache-kvrocks-${release_version}-src.tar.gz\n")),(0,a.kt)("p",null,"You will see the following output on success:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},'gpg: Signature made \u4e94 11/11 01:04:23 2022 CST\ngpg:                using RSA key 0B279084F7EC85E8A6A20E1C10C48A3C1BE7E3D8\ngpg: Good signature from "Mingyang Liu <twice@apache.org>" [unknown]\ngpg: WARNING: This key is not certified with a trusted signature!\ngpg:          There is no indication that the signature belongs to the owner.\nPrimary key fingerprint: 0B27 9084 F7EC 85E8 A6A2  0E1C 10C4 8A3C 1BE7 E3D8\nSuccess to verify the gpg sign\napache-kvrocks-2.2.0-src.tar.gz: OK\nSuccess to verify the checksum\n')),(0,a.kt)("h3",{id:"check-the-file-content-of-the-source-package"},"Check the file content of the source package"),(0,a.kt)("p",null,"Unzip ",(0,a.kt)("inlineCode",{parentName:"p"},"apache-kvrocks-${release_version}-src.tar.gz")," and check the follows:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"LICENSE and NOTICE files are correct for the repository."),(0,a.kt)("li",{parentName:"ul"},"All files have ASF license headers if necessary."),(0,a.kt)("li",{parentName:"ul"},"Building is OK.")))}h.isMDXComponent=!0}}]);